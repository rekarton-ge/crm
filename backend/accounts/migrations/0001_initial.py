# Generated by Django 4.2.7 on 2025-03-03 10:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата регистрации"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время последнего входа"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Определяет, может ли пользователь входить в систему. Используйте это поле вместо удаления учетных записей.",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Определяет, может ли пользователь входить в панель администратора.",
                        verbose_name="Статус сотрудника",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Определяет, что пользователь имеет все разрешения без их явного назначения.",
                        verbose_name="Статус суперпользователя",
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Счетчик неудачных попыток входа"
                    ),
                ),
                (
                    "last_failed_login",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Время последней неудачной попытки входа",
                    ),
                ),
                (
                    "account_locked_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время блокировки аккаунта"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "пользователь",
                "verbose_name_plural": "пользователи",
                "swappable": "AUTH_USER_MODEL",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="CustomPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codename",
                    models.CharField(
                        help_text='Техническое название разрешения, например: "can_approve_orders"',
                        max_length=100,
                        unique=True,
                        verbose_name="Кодовое имя разрешения",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Понятное название разрешения, например: "Может утверждать заказы"',
                        max_length=255,
                        verbose_name="Человекочитаемое название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Детальное описание того, что позволяет делать это разрешение",
                        verbose_name="Подробное описание",
                    ),
                ),
                (
                    "is_custom",
                    models.BooleanField(
                        default=True,
                        help_text="Если True, то это разрешение создано пользователем, а не системой",
                        verbose_name="Признак кастомного разрешения",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Модель, к которой применяется разрешение",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Тип контента",
                    ),
                ),
            ],
            options={
                "verbose_name": "разрешение",
                "verbose_name_plural": "разрешения",
                "ordering": ["codename"],
                "unique_together": {("codename", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=150, verbose_name="Использованное имя пользователя"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, verbose_name="Информация о браузере"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время попытки"
                    ),
                ),
                (
                    "was_successful",
                    models.BooleanField(verbose_name="Успешность попытки"),
                ),
                (
                    "failure_reason",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Причина неудачи"
                    ),
                ),
            ],
            options={
                "verbose_name": "попытка входа",
                "verbose_name_plural": "попытки входа",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название роли"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Описание роли"),
                ),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="Если установлено, то роль является системной и не может быть удалена",
                        verbose_name="Признак системной роли",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Разрешения, предоставляемые пользователям с этой ролью",
                        related_name="roles",
                        to="accounts.custompermission",
                        verbose_name="Разрешения",
                    ),
                ),
            ],
            options={
                "verbose_name": "роль",
                "verbose_name_plural": "роли",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Ключ сессии/токена"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, verbose_name="Информация о браузере"),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("desktop", "Компьютер"),
                            ("tablet", "Планшет"),
                            ("mobile", "Телефон"),
                            ("other", "Другое"),
                        ],
                        default="other",
                        max_length=20,
                        verbose_name="Тип устройства",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Примерное местоположение",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время начала сессии"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Время последней активности"
                    ),
                ),
                (
                    "ended_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время завершения сессии"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "сессия пользователя",
                "verbose_name_plural": "сессии пользователей",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Вход в систему"),
                            ("logout", "Выход из системы"),
                            ("view", "Просмотр"),
                            ("create", "Создание"),
                            ("update", "Обновление"),
                            ("delete", "Удаление"),
                            ("export", "Экспорт данных"),
                            ("import", "Импорт данных"),
                            ("api", "API запрос"),
                            ("other", "Другое"),
                        ],
                        max_length=50,
                        verbose_name="Тип активности",
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание действия")),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время действия"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                (
                    "object_type",
                    models.CharField(
                        blank=True,
                        help_text="Тип объекта, с которым работали",
                        max_length=100,
                        verbose_name="Тип объекта",
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True,
                        help_text="Идентификатор объекта, с которым работали",
                        max_length=100,
                        verbose_name="ID объекта",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activities",
                        to="accounts.usersession",
                        verbose_name="Сессия",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "активность пользователя",
                "verbose_name_plural": "активности пользователей",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="RoleAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата назначения"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Если установлено, то роль будет автоматически отозвана по истечении срока",
                        null=True,
                        verbose_name="Срок действия",
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_roles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Кто назначил",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assignments",
                        to="accounts.role",
                        verbose_name="Роль",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_assignments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "назначение роли",
                "verbose_name_plural": "назначения ролей",
                "ordering": ["user", "role"],
                "unique_together": {("user", "role")},
            },
        ),
        migrations.AddField(
            model_name="role",
            name="users",
            field=models.ManyToManyField(
                related_name="roles",
                through="accounts.RoleAssignment",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователи",
            ),
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="avatars/",
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Должность"
                    ),
                ),
                (
                    "department",
                    models.CharField(blank=True, max_length=100, verbose_name="Отдел"),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Краткая биография")),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "ui_settings",
                    models.JSONField(default=dict, verbose_name="Настройки интерфейса"),
                ),
                (
                    "notification_settings",
                    models.JSONField(
                        default=dict, verbose_name="Настройки уведомлений"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="ru", max_length=10, verbose_name="Предпочитаемый язык"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Europe/Moscow",
                        max_length=50,
                        verbose_name="Часовой пояс",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "профиль пользователя",
                "verbose_name_plural": "профили пользователей",
            },
        ),
    ]
