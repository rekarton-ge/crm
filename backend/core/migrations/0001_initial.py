# Generated by Django 4.2.7 on 2025-03-03 04:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.category",
                        verbose_name="Родительская категория",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Канал уведомлений",
                "verbose_name_plural": "Каналы уведомлений",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "color",
                    models.CharField(blank=True, max_length=20, verbose_name="Цвет"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tags",
                        to="core.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                ("colors", models.JSONField(default=dict, verbose_name="Цвета")),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="По умолчанию"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активна"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тема оформления",
                "verbose_name_plural": "Темы оформления",
                "ordering": ["-is_default", "name"],
            },
        ),
        migrations.CreateModel(
            name="TemplateCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория шаблонов",
                "verbose_name_plural": "Категории шаблонов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("document", "Документ"),
                            ("sms", "SMS"),
                            ("notification", "Уведомление"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                        verbose_name="Тип",
                    ),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=255, verbose_name="Тема"),
                ),
                ("content", models.TextField(verbose_name="Содержимое")),
                (
                    "variables",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Переменные"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="templates",
                        to="core.templatecategory",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шаблон",
                "verbose_name_plural": "Шаблоны",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TagGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Группа тегов",
                "verbose_name_plural": "Группы тегов",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TaggedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                (
                    "object_id",
                    models.CharField(max_length=255, verbose_name="ID объекта"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Тип контента",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="core.tag",
                        verbose_name="Тег",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тегированный элемент",
                "verbose_name_plural": "Тегированные элементы",
            },
        ),
        migrations.AddField(
            model_name="tag",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="tags",
                to="core.taggroup",
                verbose_name="Группа",
            ),
        ),
        migrations.AddField(
            model_name="tag",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Обновлено пользователем",
            ),
        ),
        migrations.CreateModel(
            name="SystemSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                (
                    "key",
                    models.CharField(max_length=100, unique=True, verbose_name="Ключ"),
                ),
                ("value", models.JSONField(verbose_name="Значение")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "group",
                    models.CharField(
                        choices=[
                            ("general", "Общие"),
                            ("security", "Безопасность"),
                            ("email", "Email"),
                            ("notification", "Уведомления"),
                            ("integration", "Интеграции"),
                            ("appearance", "Внешний вид"),
                            ("other", "Другое"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="Группа",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичная"),
                ),
                (
                    "is_editable",
                    models.BooleanField(default=True, verbose_name="Редактируемая"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Системная настройка",
                "verbose_name_plural": "Системные настройки",
                "ordering": ["group", "key"],
            },
        ),
        migrations.CreateModel(
            name="Setting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                (
                    "key",
                    models.CharField(max_length=100, unique=True, verbose_name="Ключ"),
                ),
                ("value", models.JSONField(verbose_name="Значение")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_public",
                    models.BooleanField(default=False, verbose_name="Публичная"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройка",
                "verbose_name_plural": "Настройки",
                "ordering": ["key"],
            },
        ),
        migrations.CreateModel(
            name="NotificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "channels",
                    models.ManyToManyField(
                        blank=True,
                        related_name="notification_types",
                        to="core.notificationchannel",
                        verbose_name="Каналы",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notification_types",
                        to="core.template",
                        verbose_name="Шаблон",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тип уведомления",
                "verbose_name_plural": "Типы уведомлений",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                ("content", models.TextField(verbose_name="Содержимое")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает отправки"),
                            ("sent", "Отправлено"),
                            ("delivered", "Доставлено"),
                            ("read", "Прочитано"),
                            ("failed", "Ошибка"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата прочтения"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата отправки"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата доставки"
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="ID объекта"
                    ),
                ),
                (
                    "data",
                    models.JSONField(blank=True, null=True, verbose_name="Данные"),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="core.notificationchannel",
                        verbose_name="Канал",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Тип контента",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "notification_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="core.notificationtype",
                        verbose_name="Тип уведомления",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Уведомление",
                "verbose_name_plural": "Уведомления",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "username",
                    models.CharField(max_length=255, verbose_name="Имя пользователя"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Успешно"), ("failed", "Неудачно")],
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="login_attempts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Попытка входа",
                "verbose_name_plural": "Попытки входа",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Создание"),
                            ("update", "Обновление"),
                            ("delete", "Удаление"),
                            ("view", "Просмотр"),
                            ("login", "Вход в систему"),
                            ("logout", "Выход из системы"),
                            ("export", "Экспорт данных"),
                            ("import", "Импорт данных"),
                            ("other", "Другое"),
                        ],
                        max_length=20,
                        verbose_name="Действие",
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="ID объекта"
                    ),
                ),
                (
                    "object_repr",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Представление объекта"
                    ),
                ),
                (
                    "data",
                    models.JSONField(blank=True, null=True, verbose_name="Данные"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP-адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User-Agent")),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Тип контента",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Запись аудита",
                "verbose_name_plural": "Записи аудита",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("key", models.CharField(max_length=100, verbose_name="Ключ")),
                ("value", models.JSONField(verbose_name="Значение")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользовательская настройка",
                "verbose_name_plural": "Пользовательские настройки",
                "ordering": ["user", "key"],
                "unique_together": {("user", "key")},
            },
        ),
        migrations.CreateModel(
            name="UserNotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(default=True, verbose_name="Включено"),
                ),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_preferences",
                        to="core.notificationchannel",
                        verbose_name="Канал",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "notification_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_preferences",
                        to="core.notificationtype",
                        verbose_name="Тип уведомления",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Предпочтение пользователя по уведомлениям",
                "verbose_name_plural": "Предпочтения пользователей по уведомлениям",
                "unique_together": {("user", "notification_type", "channel")},
            },
        ),
        migrations.CreateModel(
            name="TemplateVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Удалено"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата удаления"
                    ),
                ),
                ("version", models.PositiveIntegerField(verbose_name="Версия")),
                (
                    "subject",
                    models.CharField(blank=True, max_length=255, verbose_name="Тема"),
                ),
                ("content", models.TextField(verbose_name="Содержимое")),
                (
                    "variables",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Переменные"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активна"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создано пользователем",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Удалено пользователем",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="core.template",
                        verbose_name="Шаблон",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Обновлено пользователем",
                    ),
                ),
            ],
            options={
                "verbose_name": "Версия шаблона",
                "verbose_name_plural": "Версии шаблонов",
                "ordering": ["-version"],
                "unique_together": {("template", "version")},
            },
        ),
        migrations.AddIndex(
            model_name="template",
            index=models.Index(fields=["type"], name="core_templa_type_0dcd9a_idx"),
        ),
        migrations.AddIndex(
            model_name="template",
            index=models.Index(
                fields=["is_active"], name="core_templa_is_acti_c55c13_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="taggeditem",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="core_tagged_content_0b937e_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taggeditem",
            unique_together={("tag", "content_type", "object_id")},
        ),
        migrations.AddIndex(
            model_name="systemsetting",
            index=models.Index(fields=["group"], name="core_system_group_5a3b5b_idx"),
        ),
        migrations.AddIndex(
            model_name="systemsetting",
            index=models.Index(
                fields=["is_public"], name="core_system_is_publ_397ec9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["user"], name="core_notifi_user_id_011462_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["notification_type"], name="core_notifi_notific_c748b8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["channel"], name="core_notifi_channel_ed2923_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["status"], name="core_notifi_status_7f445c_idx"),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="core_notifi_content_f3d083_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="loginattempt",
            index=models.Index(
                fields=["username"], name="core_logina_usernam_212e2b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loginattempt",
            index=models.Index(fields=["status"], name="core_logina_status_291636_idx"),
        ),
        migrations.AddIndex(
            model_name="loginattempt",
            index=models.Index(
                fields=["ip_address"], name="core_logina_ip_addr_26442e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="loginattempt",
            index=models.Index(
                fields=["created_at"], name="core_logina_created_b369ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["user"], name="core_auditl_user_id_2ff9b7_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(fields=["action"], name="core_auditl_action_d9fb24_idx"),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="core_auditl_content_fec0c4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["created_at"], name="core_auditl_created_dc23ea_idx"
            ),
        ),
    ]
